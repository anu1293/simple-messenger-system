openapi: 3.0.0
info:
  title: Simple Message Server API SPECS
  description: Simple Message Server API SPECS
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: users
    description: Operations related to a user
  - name: auth
    description: Operations related to authentication of the user
  - name: messages
    description: Operations related to users messages
  - name: groups
    description: Operations related to user groups
paths:
  /auth/signup:
    post:
      summary: create a user in the server
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        200:
          description: success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
      tags:
        - auth
  /auth/login:
    post:
      operationId: signIn
      summary: login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      tags:
        - auth
  /auth/logout:
    post:
      operationId: signOut
      summary: logout user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        200:
          description: logged out successfully
      tags:
        - auth
  /users:
    get:
      operationId: fetchAllUsers
      summary: fetch all users in the server
      responses:
        200:
          description: request executed successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      tags:
        - users
  /messages/user/{username}/getMessages:
    get:
      operationId: fetchUserMessages
      summary: Retrieve all unread messages of a user
      parameters:
        - name: username
          in: path
          description: username of the user to retrieve messages
          required: true
          schema:
            type: string
        - name: friend
          in: query
          description: username of the friend whose messages needs to be retrieved
          required: false
          schema:
            type: string
      responses:
        200:
          description: User's messages retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMessages'
        404:
          description: User not found
      tags:
        - messages
  /messages/{messageType}/send:
    post:
      parameters:
        - name: messageType
          in: path
          description: direct message or group message
          required: true
          schema:
            $ref: '#/components/schemas/MessageType'
      operationId: sendMessageToUser
      summary: send message to specific user or group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextMessageObject'
      responses:
        200:
          description: success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextMessageResponse'
      tags:
        - messages
  /groups/create:
    post:
      operationId: createGroup
      summary: create user group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        200:
          description: success message
          content:
            application/json:
              schema:
                type: boolean
      tags:
        - groups
  /groups/{operation}/members:
    post:
      operationId: addMembersToGroup
      summary: add members to group
      parameters:
        - name: operation
          in: path
          description: group members add or remove
          required: true
          schema:
             $ref: '#/components/schemas/GroupOperation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/GroupMembersAddOrRemoveRequest'
      responses:
        200:
          description: success message
          content:
            application/json:
               schema:
                 type: boolean
      tags:
        - groups
components:
  schemas:
    CreateUserResponse:
      type: object
      properties:
        status:
          type: string
          description: "status of response"
        message:
          type: string
          description: "response message"
        token:
          type: string
    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      required:
        - username
        - password
        - confirmPassword
    UserList:
      type: object
      properties:
        status:
          type: string
        data:
          type: array
          items:
            type: string
    UserMessages:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserMessage'
    UserMessage:
      type: object
      properties:
        username:
          type: string
        groupName:
          type: string
        texts:
          type: array
          items:
            type: string
    TextMessageObject:
      type: object
      properties:
        from:
          type: int
        to:
          type: int
        text:
          type: string
    TextMessageResponse:
      type: object
      properties:
        status:
          type: string
        text:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        token:
          type: string
    LogoutRequest:
      type: object
      properties:
        username:
          type: string
    MessageType:
      type: string
      enum:
        - DIRECT
        - GROUP
    GroupOperation:
      type: string
      enum:
        - ADD
        - REMOVE
    CreateGroupRequest:
      type: object
      properties:
        groupName:
          type: string
        members:
          type: array
          items:
            type: int
    CreateGroupResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    GroupMembersAddOrRemoveRequest:
      type: object
      properties:
        groupId:
          type: int
        members:
          type: array
          items:
            type: int
    GroupMembersAddOrRemoveResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string



